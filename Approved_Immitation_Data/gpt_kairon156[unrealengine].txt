Oh man, I am so excited to talk about game development! I've been learning about Unreal Engine 4 for a while now and I have so many questions. One thing that really caught my attention was the concept of Fog of War. I mean, it's such a cool feature in games like Commandos where you can have different levels of visibility for your characters. In Commandos, the close half is a light green and the further half is a dark green. The light green acts as normal but in the dark green section, you can have someone crouch and they won't be noticed until that person stands up.  I was wondering if something like this would be doable in UE4. Maybe you could have two layers of vision, one being the light green which would be say 5ft away and the 2nd being dark green underneath the light one at 10ft away. The 2nd one being the crouching version. I'm not sure if it would be just as easy/hard to set this feature in one layer, but it would be really cool if it could be done.  I'm also curious about how much of the Fog of War can be edited. Can I make it so when the player clicks on the NPC/AI it'll show up their range? Can I change how far the sight range is for the character who may have been blind or some other vision issue like standing in smoke? Maybe it could just shorten their range or make it less accurate.  And speaking of NPC's/AI, can your version of Fog of War be used with them? I have this idea for a fishing game where the player is on a boat so the fish won't notice the player, but they will notice when the bait/lure is dropped in the water. Is there a way to set it up so the NPC/AI only sees objects designed to get their attention and not other characters?  I really think that this Fog of War system would be perfect for a modern Commandos game. I mean, it looks very well put together and it does use 4.10 which is good. None of my game ideas are FPS ones, but I may look into this if it explains things in detail.  When I first started learning about game development, I could only follow 10 minutes of a tutorial at a time. It would take me anywhere from 15-30 minutes to finish them and my brain would feel full like it was going to explode so I had to stop and take longish breaks. At first, I would only be able to do maybe 2 10 minute chunks a week sometimes taking 2-3 weeks off between videos.  But over time, I was better able to understand what I was doing and after motivating myself to sit down longer, I was able to solely take on longer and longer chunks of tutorials. Still, a 20+ minute tutorial would take me closer to 40 minutes. At this stage, I was able to do most tutorials but it felt like I was just going through the motions not really learning anything except when the tutorials were out of date and I had to work around them.  A few things helped me break through this learning wall. First, after doing so many tutorials, I was starting to understand what some things were supposed to do, though not in detail just vague impressions of their function. Second, I found a YouTube channel called Mathew Wadstein where they just explain what different functions are in the engine. Being able to understand what things were meant to do even just the first 15ish videos and why seemed to help me in future tutorials quite a bit. Some tutorials I was able to do much faster if I knew the topic from before.  The stage I'm currently in, I don't know what to learn next but now I actually know enough to help other people when they ask blueprint questions and working things out for them. This helps me learn what I'm capable of doing by knowing 85% of a question and working through the problem of finding a solution.  My next goal is to find a simple project to work on largely myself and see where it takes me from there. Here is a playlist of Blueprint tutorials I'm making. It's missing a few tutorials I had done but also has others I haven't started yet. I tried to make sure most of these were up to date but others I had added 4+ months ago and even then they were out of date.  Here's a tutorial on How to make Pong by Alex Young. This is almost a year old so you'll have to work around things that are different. At one part I had to delete a step as it was no longer needed. Many things have been moved around in the engine or possibly renamed.  I'm about half a year into learning the blueprint system and would still like to know more before working on my own game. I came up with 2 options for an attack animation. The first option while holding the attack key sets the flipbook to the attack animation. Then when the attack key is released it sets the animation to the default one (or a new one if you prefer.)  The second option uses a Timeline so when you press the attack key it sets the attack animation while the timeline is running. When it finishes it sets the animation to the default one (or a new one if you prefer.) Here is my Timeline. I added a Float Track than set it to 4 seconds which is how long it'll play the animation for. I'm unsure if its value affects the flipbook or not. The length of the timeline must be set for however long your attack is going to be, maybe longer if you want the attack animation to repeat.  I have two notes about the 2nd option. First, I had to add Do Once because without it every time the attack key was pressed it would reset the length of the timeline. The second thing about the Do Once setup is that you can't attack while the animation is currently playing. Though I'm fairly sure you can still move while attacking, at least with my setup anyway.  I just noticed it says Cast to Bee_Character. That's just the name of my blueprint class for my Default Pawn. No problem. I hope it's helpful for other things you may want to do.  I doubt this is what you're looking for, but there's a nature pack that uses spline to make trees and rivers. You can edit the speed of the rivers and they change based on height. I'll have to look into the Paper 2D and more tutorials around the things I'm asking about.  Is it possible in UE4 to create a JRPG game in the way I would like? Sure, you can set up the 2D map/level and place a playable character on it, but being able to have a character walk around on it properly colliding with smaller objects, let alone interacting with NPC's and objects such as a chest with items is another thing.  Sorry if my response is a bit long. It's quite easy for me to come up with a list of features and game mechanics for something I would like to work on. The hard part is making a minimal viable product, meaning what is the least amount of stuff I need to make the game functional. I gave myself a full year to get to a level before I was comfortable with trying to make an actual game.  I've been following blueprint tutorials for about half a year, mainly during my free time and am finally comfortable with my ability to play around with what I know. As a result, I haven't prepared myself in terms of what needs to be worked on first, in terms of creating a functional game even a basic one like breakout.  I enjoy using the Widget system and once I learn how to have an inventory and equipment system, I'll be all set. Man, game development is so exciting!